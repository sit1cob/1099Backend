{
  "info": {
    "name": "1099",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "e6f1f2f0-1a2b-4f2b-9f20-9b4edc0d1abc"
  },
  "item": [
    {
      "name": "Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "const json = pm.response.json();",
              "pm.test(\"Service identifier present\", function () {",
              "  pm.expect(json).to.have.property('service');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register Vendor",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/register-vendor",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register-vendor"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vendorName\": \"AIJ_Appliances\",\n  \"username\": \"AIJ_Appliances\",\n  \"password\": \"password123\",\n  \"email\": \"aij@example.com\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.data && json.data.accessToken) {",
                  "  pm.collectionVariables.set('accessToken', json.data.accessToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"AIJ_Appliances\",\n  \"password\": \"password123\",\n  \"role\": \"registered_user\",\n  \"fcmToken\": \"{{fcmToken}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.data && json.data.accessToken) {",
                  "  pm.collectionVariables.set('accessToken', json.data.accessToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Auth Status",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "status"]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "change-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"old_password\",\n  \"newPassword\": \"new_secure_password\"\n}"
            }
          }
        }
      ]
    },
    {
      "name": "Vendors",
      "item": [
        {
          "name": "Get My Vendor Profile",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
                  "const json = pm.response.json();",
                  "pm.test('success true', function () { pm.expect(json.success).to.be.true; });",
                  "pm.test('data object present', function () { pm.expect(json).to.have.property('data'); });",
                  "pm.test('id present', function () { pm.expect(json.data).to.have.property('id'); });",
                  "pm.test('name present', function () { pm.expect(json.data).to.have.property('name'); });",
                  "pm.test('phoneNumber present', function () { pm.expect(json.data).to.have.property('phoneNumber'); });",
                  "pm.test('email present', function () { pm.expect(json.data).to.have.property('email'); });",
                  "pm.test('isActive present', function () { pm.expect(json.data).to.have.property('isActive'); });",
                  "pm.test('createdAt present', function () { pm.expect(json.data).to.have.property('createdAt'); });",
                  "pm.test('stats present with totals', function () { pm.expect(json.data).to.have.property('stats'); pm.expect(json.data.stats).to.have.property('totalJobs'); pm.expect(json.data.stats).to.have.property('completedJobs'); pm.expect(json.data.stats).to.have.property('averageRating'); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get My Available Jobs",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me/jobs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me", "jobs"]
            }
          }
        },
        {
          "name": "Get My Assignments",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me/assignments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me", "assignments"]
            }
          }
        }
      ]
    },
    {
      "name": "Jobs",
      "item": [
        {
          "name": "Available Jobs",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/available?page={{page}}&pageSize={{pageSize}}&city={{city}}&applianceType={{applianceType}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "available"],
              "query": [
                { "key": "page", "value": "{{page}}", "description": "Page number (default 1)" },
                { "key": "pageSize", "value": "{{pageSize}}", "description": "Items per page (default 20, max 100)" },
                { "key": "city", "value": "{{city}}", "description": "Filter by city (case-insensitive exact)" },
                { "key": "applianceType", "value": "{{applianceType}}", "description": "Filter by appliance type (case-insensitive exact)" }
              ]
            },
            "description": "Returns paginated list of jobs with optional filters: city, applianceType. Response includes pagination metadata."
          }
        },
        {
          "name": "Get Job by ID",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}"]
            }
          }
        },
        {
          "name": "Claim Job",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}/claims",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}", "claims"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vendorNotes\": \"I can handle this repair\",\n  \"action\": \"accept\"\n}"
            },
            "description": "Vendor claims an available job. Body supports vendorNotes and action (accept | decline)."
          }
        }
      ]
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:5001" },
    { "key": "accessToken", "value": "" },
    { "key": "jobId", "value": "" },
    { "key": "fcmToken", "value": "" }
  ]
}
