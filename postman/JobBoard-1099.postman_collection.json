{
  "info": {
    "name": "1099",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "e6f1f2f0-1a2b-4f2b-9f20-9b4edc0d1abc"
  },
  "item": [
    {
      "name": "Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/health",
          "host": ["{{baseUrl}}"],
          "path": ["health"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "  pm.response.to.have.status(200);",
              "});",
              "const json = pm.response.json();",
              "pm.test(\"Service identifier present\", function () {",
              "  pm.expect(json).to.have.property('service');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register Vendor",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/register-vendor",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register-vendor"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vendorName\": \"AIJ_Appliances\",\n  \"username\": \"AIJ_Appliances\",\n  \"password\": \"password123\",\n  \"email\": \"aij@example.com\",\n  \"phone\": \"+14083481485\",\n  \"serviceAreas\": [\"60607\", \"60611\", \"60601\"],\n  \"appliances\": [\"Refrigerator\", \"Air Conditioner\"],\n  \"available\": true\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.data && json.data.accessToken) {",
                  "  pm.collectionVariables.set('accessToken', json.data.accessToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update My Profile",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vendorName\": \"AIJ_Appliances\",\n  \"username\": \"AIJ_Appliances\",\n  \"password\": \"password123\",\n  \"email\": \"aij@example.com\",\n  \"phone\": \"+14083481485\",\n  \"serviceAreas\": [\"60607\", \"60611\", \"60601\"],\n  \"appliances\": [\"Refrigerator\", \"Air Conditioner\"],\n  \"available\": true\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.data && json.data.accessToken) {",
                  "  pm.collectionVariables.set('accessToken', json.data.accessToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"AIJ_Appliances\",\n  \"password\": \"password123\",\n  \"role\": \"registered_user\",\n  \"fcmToken\": \"{{fcmToken}}\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const json = pm.response.json();",
                  "if (json && json.data && json.data.accessToken) {",
                  "  pm.collectionVariables.set('accessToken', json.data.accessToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Auth Status",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "status"]
            }
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "change-password"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"old_password\",\n  \"newPassword\": \"new_secure_password\"\n}"
            }
          }
        }
      ]
    },
    {
      "name": "Vendors",
      "item": [
        {
          "name": "Get My Vendor Profile",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
                  "const json = pm.response.json();",
                  "pm.test('success true', function () { pm.expect(json.success).to.be.true; });",
                  "pm.test('data object present', function () { pm.expect(json).to.have.property('data'); });",
                  "pm.test('id present', function () { pm.expect(json.data).to.have.property('id'); });",
                  "pm.test('name present', function () { pm.expect(json.data).to.have.property('name'); });",
                  "pm.test('phoneNumber present', function () { pm.expect(json.data).to.have.property('phoneNumber'); });",
                  "pm.test('email present', function () { pm.expect(json.data).to.have.property('email'); });",
                  "pm.test('isActive present', function () { pm.expect(json.data).to.have.property('isActive'); });",
                  "pm.test('createdAt present', function () { pm.expect(json.data).to.have.property('createdAt'); });",
                  "pm.test('stats present with totals', function () { pm.expect(json.data).to.have.property('stats'); pm.expect(json.data.stats).to.have.property('totalJobs'); pm.expect(json.data.stats).to.have.property('completedJobs'); pm.expect(json.data.stats).to.have.property('averageRating'); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update My Profile",
          "request": {
            "method": "PATCH",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"+12245660644\",\n  \"serviceAreas\": [\"60611\", \"60601\", \"60614\"],\n  \"appliances\": [\"Microwave Oven\", \"Refrigerator\"],\n  \"available\": true\n}"
            },
            "description": "Update vendor profile fields: phone, serviceAreas, appliances, available."
          }
        },
        {
          "name": "Get My Available Jobs",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me/jobs?page={{page}}&pageSize={{pageSize}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me", "jobs"],
              "query": [
                { "key": "page", "value": "{{page}}", "description": "Page number (default 1)" },
                { "key": "pageSize", "value": "{{pageSize}}", "description": "Items per page (default 20, max 100)" }
              ]
            },
            "description": "Returns paginated jobs available for the authenticated vendor. Same job DTO and pagination metadata as /api/jobs/available."
          }
        },
        {
          "name": "Get My Assignments",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me/assignments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me", "assignments"]
            }
          },
          "description": "Returns the authenticated vendor's assignments, enriched with job details: customerName, soNumber, and address.",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () { pm.response.to.have.status(200); });",
                  "const json = pm.response.json();",
                  "pm.test('success true', function () { pm.expect(json.success).to.be.true; });",
                  "if (json && Array.isArray(json.data) && json.data.length > 0) {",
                  "  const first = json.data[0];",
                  "  pm.test('has customerName', function () { pm.expect(first).to.have.property('customerName'); });",
                  "  pm.test('has soNumber', function () { pm.expect(first).to.have.property('soNumber'); });",
                  "  pm.test('has address', function () { pm.expect(first).to.have.property('address'); });",
                  "  if (first.id) pm.collectionVariables.set('assignmentId', first.id);",
                  "  if (first.jobId) pm.collectionVariables.set('jobId', first.jobId);",
                  "} else { pm.collectionVariables.unset('assignmentId'); }"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Add Parts (Me)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me/parts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me", "parts"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"assignmentId\": \"{{assignmentId}}\",\n  \"parts\": [\n    {\n      \"partNumber\": \"WP2198202\",\n      \"partName\": \"Refrigerator Water Filter\",\n      \"quantity\": 1,\n      \"unitCost\": 45.99\n    }\n  ]\n}"
            }
          },
          "description": "Add one or more parts to an assignment that belongs to the authenticated vendor."
        },
        {
          "name": "Dashboard",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/me/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["api", "vendors", "me", "dashboard"]
            }
          },
          "description": "Returns KPI-style metrics for the vendor dashboard including totals, kpis and chart segments."
        }
      ]
    },
    {
      "name": "Jobs",
      "item": [
        {
          "name": "Available Jobs",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/available?page={{page}}&pageSize={{pageSize}}&city={{city}}&applianceType={{applianceType}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "available"],
              "query": [
                { "key": "page", "value": "{{page}}", "description": "Page number (default 1)" },
                { "key": "pageSize", "value": "{{pageSize}}", "description": "Items per page (default 20, max 100)" },
                { "key": "city", "value": "{{city}}", "description": "Filter by city (case-insensitive exact)" },
                { "key": "applianceType", "value": "{{applianceType}}", "description": "Filter by appliance type (case-insensitive exact)" }
              ]
            },
            "description": "Returns paginated list of jobs with optional filters: city, applianceType. Response includes pagination metadata."
          }
        },
        {
          "name": "Create Job",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/jobs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"soNumber\": \"TEST-123\",\n  \"customerName\": \"John Smith\",\n  \"customerCity\": \"Chicago\",\n  \"customerState\": \"IL\",\n  \"customerZip\": \"60607\",\n  \"scheduledDate\": \"2025-10-01T10:00:00Z\",\n  \"applianceType\": \"Refrigerator\",\n  \"manufacturerBrand\": \"Whirlpool\",\n  \"serviceDescription\": \"Not cooling\",\n  \"priority\": \"medium\"\n}"
            },
            "description": "Create a new job. Requires Authorization. The only required field is soNumber; other fields are optional."
          }
        },
        {
          "name": "Get Job by ID",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}"]
            }
          }
        },
        {
          "name": "Claim Job",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}/claims",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}", "claims"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vendorNotes\": \"I can handle this repair\",\n  \"action\": \"accept\"\n}"
            },
            "description": "Vendor claims an available job. Body supports vendorNotes and action (accept | decline)."
          }
        }
      ]
    },
    {
      "name": "Assignments",
      "item": [
        {
          "name": "Update Assignment - Arrived",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{assignmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "assignments", "{{assignmentId}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"arrived\",\n  \"actualArrival\": \"2024-03-20T08:15:00Z\",\n  \"notes\": \"Arrived at customer location\"\n}"
            }
          },
          "description": "Mark an assignment as arrived. All fields except status are optional."
        },
        {
          "name": "Update Assignment - Completed",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" },
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{assignmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "assignments", "{{assignmentId}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"completed\",\n  \"completedAt\": \"2024-03-20T11:00:00Z\",\n  \"completionNotes\": \"Replaced water filter and cleaned coils. Refrigerator cooling normally.\",\n  \"customerSignature\": \"base64_encoded_signature_image\",\n  \"laborHours\": 1.5,\n  \"totalPartsCost\": 45.99,\n  \"totalLaborCost\": 150.00,\n  \"totalCost\": 195.99\n}"
            }
          },
          "description": "Complete an assignment with optional cost and signature details. All fields except status are optional."
        },
        {
          "name": "Get Assignment by ID",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments/{{assignmentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "assignments", "{{assignmentId}}"]
            }
          }
        },
        {
          "name": "List My Assignments",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{accessToken}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/assignments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "assignments"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:5001" },
    { "key": "baseUri", "value": "http://localhost:5001" },
    { "key": "accessToken", "value": "" },
    { "key": "jobId", "value": "" },
    { "key": "assignmentId", "value": "" },
    { "key": "fcmToken", "value": "" }
  ]
}
